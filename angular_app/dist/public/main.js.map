{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/create/create.component.css","webpack:///./src/app/create/create.component.html","webpack:///./src/app/create/create.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/list/list.component.css","webpack:///./src/app/list/list.component.html","webpack:///./src/app/list/list.component.ts","webpack:///./src/app/review/review.component.css","webpack:///./src/app/review/review.component.html","webpack:///./src/app/review/review.component.ts","webpack:///./src/app/view/view.component.css","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CreateComponent } from './create/create.component';\nimport { ListComponent } from './list/list.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ReviewComponent } from './review/review.component';\nimport { ViewComponent } from './view/view.component';\n\n\nconst routes: Routes = [\n  // { path: '',component: AppComponent },\n  // use a colon and parameter name to include a parameter in the url\n  // { path: 'gamma/:id', component: GammaComponent },\n  // redirect to /alpha if there is nothing in the url\n  { path: '', pathMatch: 'full', redirectTo: '/movies' },\n  { path: 'cakes/new', component: CreateComponent},\n  { path: 'reviews/new/:id', component: ReviewComponent},\n  { path: 'movies', component: ListComponent},\n  { path: 'movies/:id', component: ViewComponent},\n  { path: 'edit/:id', component: EditComponent}\n  // the ** will catch anything that did not match any of the above routes\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\r\\ndiv{\\r\\n\\twidth: 400px;\\r\\n\\tmargin: 5%;\\r\\n\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0NBQ0MsWUFBWTtDQUNaLFVBQVU7O0FBRVgiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5kaXZ7XHJcblx0d2lkdGg6IDQwMHB4O1xyXG5cdG1hcmdpbjogNSU7XHJcblxyXG59Il19 */\"","module.exports = \"\\n\\n<div>\\n\\n\\t<h1>Squishy Tomatoes</h1>\\n\\n<!-- \\t<button (click)=\\\"showCreate()\\\">New Cake</button> -->\\n<!-- \\t<button [routerLink]=\\\"['/list']\\\">Cake List</button>\\n -->\\t<router-outlet></router-outlet> \\n</div>\\n \\n\"","\nimport { HttpService } from './http.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  cakes : any;\n  selectedCake : any;\n\n  constructor(private _httpService: HttpService,private _router: Router,private _route: ActivatedRoute){\n  }\n\n  // ngOnInit will run when the component is initialized, after the constructor method.\n  ngOnInit(){\n\n  }\n\n\n\n  // }\n\n\n\n\n\n  // removeCake(id: Number): void{\n\n    //     console.log(\"component:\");\n\n    //   let observable = this._httpService.removeCake(id);\n    //   observable.subscribe(data => {\n      //     this.showAll();\n      //   })\n      // }\n      \n\n\n\n\n\n\n    }\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { FormsModule } from '@angular/forms';\n\nimport { ReviewComponent } from './review/review.component';\nimport { CreateComponent } from './create/create.component';\nimport { ListComponent } from './list/list.component';\nimport { EditComponent } from './edit/edit.component';\nimport { ViewComponent } from './view/view.component';\nimport {NgPipesModule} from 'ngx-pipes';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReviewComponent,\n    CreateComponent,\n    ListComponent,\n    EditComponent,\n    ViewComponent\n\n  ],\n\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    NgPipesModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".error{\\r\\n\\tcolor: red;\\r\\n}\\r\\n\\r\\n.top{\\r\\n\\twidth: 600px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsVUFBVTtBQUNYOztBQUVBO0NBQ0MsWUFBWTtBQUNiIiwiZmlsZSI6InNyYy9hcHAvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVycm9ye1xyXG5cdGNvbG9yOiByZWQ7XHJcbn1cclxuXHJcbi50b3B7XHJcblx0d2lkdGg6IDYwMHB4O1xyXG59Il19 */\"","module.exports = \"\\n\\n\\n<div class = \\\"top\\\" >\\n\\t<h1>Submit a movie and your review</h1>\\n\\t<!-- Back-end validations -->\\n\\t<p class = \\\"error\\\">{{error.title}}</p>\\n\\t<p class = \\\"error\\\">{{error.name}}</p>\\n\\t<p class = \\\"error\\\">{{error.rating}}</p>\\n\\t<p class = \\\"error\\\">{{error.review}}</p>\\n\\t<!-- Front-end validations -->\\n\\n\\n\\n\\t<p class = \\\"error\\\" *ngIf = \\\"newCake.title.length < 1\\\">Movies must have a title</p>\\n\\n\\t<p class = \\\"error\\\" *ngIf = \\\"newCake.title.length >= 1 && newCake.title.length <3 \\\">Your title cannot be less than 3 characters long!</p>\\n\\n\\t\\t<p class = \\\"error\\\" *ngIf = \\\"newReview.reviewer.length < 1\\\">You must provide your name</p>\\n\\n\\n\\t\\t<p class = \\\"error\\\" *ngIf = \\\"newReview.reviewer.length >= 1 && newReview.reviewer.length <3\\\">Your name cannot be less than 3 characters long!</p>\\n\\n\\n\\t\\t<p class = \\\"error\\\" *ngIf = \\\"newReview.comment.length <1\\\">You must provide a review</p>\\n\\n\\t\\t<p class = \\\"error\\\" *ngIf = \\\"newReview.comment.length >= 1 && newReview.comment.length <3 \\\">Your review must be longer than 3 characters long</p>\\n\\n\\n\\n\\t\\t</div>\\n\\n\\n\\n\\t\\t<form (submit)=\\\"addCake()\\\">\\n\\t\\t\\t<!-- use the json pipe to see how newTask changes in real time -->\\n\\t\\t\\t<!-- \\t    <p> {{ newCake | json }} </p> -->\\n\\t\\t\\t<!-- validations for entering baker info -->\\n\\n\\t\\t\\t<ul><b>Movie Title: </b><input type=\\\"text\\\" name=\\\"newCake.title\\\" [(ngModel)] = \\\"newCake.title\\\" /></ul>\\n\\t\\t\\t<ul><b>Your Name: </b><input type=\\\"text\\\" name=\\\"newReview.reviewer\\\" [(ngModel)] = \\\"newReview.reviewer\\\" />\\n\\n\\t\\t\\t</ul>\\n\\n\\n\\t\\t\\t<!-- \\t    <b>Title: </b><input type=\\\"text\\\" name=\\\"newCake.imgurl\\\" [(ngModel)] = \\\"newCake.imgurl\\\" /> -->\\n\\t\\t\\t\\n\\t\\t\\t<ul><b>Stars: </b>\\n\\t\\t\\t\\t<select input type = \\\"text\\\"  name=\\\"newReview.rating\\\" [(ngModel)] = \\\"newReview.rating\\\"  >\\n\\n\\t\\t\\t\\t\\t<option value = \\\"1\\\">1</option>\\n\\t\\t\\t\\t\\t<option value = \\\"2\\\">2</option>\\n\\t\\t\\t\\t\\t<option value = \\\"3\\\">3</option>\\n\\t\\t\\t\\t\\t<option value = \\\"4\\\">4</option>\\n\\t\\t\\t\\t\\t<option value = \\\"5\\\">5</option>\\n\\n\\t\\t\\t\\t</select></ul>\\n\\n\\t\\t\\t\\t<ul><b>Your review: </b><input type=\\\"text\\\" name=\\\"newReview.comment\\\" [(ngModel)] = \\\"newReview.comment\\\" /></ul>\\n\\n\\t\\t\\t\\t<input  type=\\\"submit\\\" value=\\\"Submit\\\"/>\\n\\n\\t\\t\\t</form>\\n\\n\\t\\t\\t<button (click) = \\\"cancel()\\\">Cancel</button>\\n\\n<!-- \\t\\t\\t{{newCake | json}}\\n\\n\\n\\t\\t\\t{{newReview | json}} -->\\n\\n<!-- \\n\\t[disabled]=\\\"newReview.reviewer.length < 1 || newReview.reviewer.length < 1\\\" -->\\n\\n\"","import { HttpService } from '../http.service';\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n\t@Input() formToShow: any;\n\t@Output() updateEmitter = new EventEmitter();\n\n\tnewCake : any;\n  error : any;\n  newReview: any;\n\n  constructor(private _httpService: HttpService,private _router: Router,private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.newCake = { \n      name: \"\",\n      title: \"\",\n      reviews: []\n    };\n\n    this.newReview = { \n      reviewer: \"\",\n      rating: 1,\n      comment: \"\"\n    };\n\n    this.error = { \n      title: \"\",\n      name: \"\",\n      review:\"\",\n      rating:\"\"\n    };\n\n\n\n    // this.showAll();\n  }\n\n  // showAll(): void{\n    //   let observable = this._httpService.getAll();\n\n    //   observable.subscribe(data => {\n      //     this.cakes = data['cakes'];\n\n      //     console.log(this.cakes);\n\n      //   }); \n      // }  \n\n      addCake(){\n\n        console.log(\"component:\");\n        console.log(this.newCake);\n\n        console.log(this.newReview);\n        \n        this.newCake['name'] = this.newReview['reviewer'];\n\n\n        let observable = this._httpService.addCake(this.newCake);\n        observable.subscribe(data => {\n\n          console.log(\"Within Observable:\");\n          console.log(data);\n\n          if (data['error'] == null){\n\n            // console.log(data['cake']);\n\n            // console.log(data['cake']._id);\n            // this.newCake = {\n              //   baker: \"\",\n              //   imgurl: \"\"\n              // };\n\n              let observable = this._httpService.addReview(data['cake']._id,this.newReview);\n              observable.subscribe(data => {\n\n                console.log(\"Within Observable:\");\n                console.log(data);\n\n                if (data['error'] == null){\n                  this.newCake = {\n                    baker: \"\",\n                    imgurl: \"\"\n                  };\n\n                  this.updateEmitter.emit(true);\n\n                }else{\n\n\n\n                  this.error = data['error']['message']; \n\n                }\n              })\n\n              this.updateEmitter.emit(true);\n\n            }else{\n\n\n              if(data['error']['errors']['name']){\n                this.error['name'] = \"Name is required for a movie.\"\n\n              }\n\n              if(data['error']['errors']['title']){\n                this.error['title'] = \"Title is required for a movie.\"\n              }\n\n              this.error['rating'] = \"Rating is required for a movie.\"\n              this.error['review'] = \"Review is required for a movie.\"\n\n\n\n              // console.log(data['error']['messsage']);\n              // console.log(data['error']['errors']['name']);\n              // console.log(data['error']['errors']['title']);\n              // this.error = data['error']['message']; \n\n            }\n          })\n      }\n      cancel(){\n        this.updateEmitter.emit(true);\n\n      }\n\n\n\n\n    }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n<!-- <div class = \\\"top\\\" >\\n\\t<h1>Upload your Cake for Review!</h1>\\n\\n\\t\\t<p class = \\\"error\\\">{{error}}</p>\\n\\n\\t\\t<p class = \\\"error\\\" *ngIf = \\\"newCake.imgurl.length >= 1 && newCake.imgurl.length <3 \\\">Your image cannot be blank!</p>\\n\\t\\t<p class = \\\"error\\\" *ngIf = \\\"newCake.baker.length >= 1 && newCake.baker.length <3\\\">Your comment cannot be blank!</p>\\n\\n</div> -->\\n\\n<form (submit)=\\\"updateCake(childComponentVariable._id)\\\">\\n\\n\\t<b>Baker:</b> <input type =\\\"text\\\" name = \\\"childComponentVariable.baker\\\" [(ngModel)] = \\\"childComponentVariable.baker\\\">\\n\\n\\t<b>ImgUrl: </b> <input type = \\\"text\\\" name = \\\"childComponentVariable.imgurl\\\" [(ngModel)] = \\\"childComponentVariable.imgurl\\\">\\n\\n\\t<input type = \\\"submit\\\" value = \\\"Submit Changes\\\"/>\\n\\n</form>\\n\\n<!-- {{childComponentVariable | json}}\\n -->\\n\\n\"","import { HttpService } from '../http.service';\nimport { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n\tselector: 'app-edit',\n\ttemplateUrl: './edit.component.html',\n\tstyleUrls: ['./edit.component.css']\n})\n\nexport class EditComponent implements OnInit {\n\tcakes : any ;\n\t@Input() childComponentVariable : any;\n\t@Output() dataGoingToParent = new EventEmitter();\n\n\tconstructor(private _httpService: HttpService,private _router: Router,private _route: ActivatedRoute) { }\n\n\tngOnInit() {\n\n\t}\n\n\tupdateCake(childId){\n\t\tconsole.log(childId);\n\t\tconsole.log(this.childComponentVariable);\n\t\tlet observable = this._httpService.updateCake(childId, this.childComponentVariable);\n\t\tobservable.subscribe(data => {\n\t\t\tconsole.log(\"Within Observable:\");\n\t\t\tconsole.log(data);\n\t\t\tconsole.log(this.dataGoingToParent.emit(true));\n\t\t\tthis.dataGoingToParent.emit(true);\n\t\t\t// this.showAll();\n\t\t})\n\t}\n\n\t// showAll(){\n\t// \tlet observable = this._httpService.getAll();\n\t// \tobservable.subscribe(data => {\n\t// \t\tthis.cakes = data['cakes'];\n\t// \t})\n\t// }\n\n\n\n\n\t// addCake(){\n\n\t\t// \tconsole.log(\"component:\");\n\t\t// \tconsole.log(this.newCake);\n\n\t\t// \tlet observable = this._httpService.addCake(this.newCake);\n\t\t// \tobservable.subscribe(data => {\n\n\t\t\t// \t\tconsole.log(\"Within Observable:\");\n\t\t\t// \t\tconsole.log(data);\n\n\t\t\t// \t\tif (data['error'] == null){\n\t\t\t\t// \t\t}else{\n\t\t\t\t\t// \t\t\tthis.error = data['error']['message'];         \n\t\t\t\t\t// \t\t}\n\n\n\t\t\t\t\t// \t\tconsole.log(this.error);\n\n\t\t\t\t\t// \t\tthis.newCake = {\n\t\t\t\t\t\t// \t\t\tbaker: \"\",\n\t\t\t\t\t\t// \t\t\timgurl: \"\"\n\t\t\t\t\t\t// \t\t};\n\n\t\t\t\t\t\t// \t\tthis.updateEmitter.emit(true);\n\t\t\t\t\t\t// \t})\n\t\t\t\t\t\t// }\n\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n\n@Injectable({providedIn: 'root'})\nexport class HttpService {\n    constructor(private _http: HttpClient){\n        this.getAll();\n        // this.deleteTask();\n        // this.addCake(cake);\n    }\n\n\tgetAll(){\n\n\t\treturn this._http.get('/getAll');\n\t}\n\n\t// getTask(id){\n\n\t// // our http response is an Observable, store it in a variable\n\n\t// // let tempObservable = this._http.get('/tasks/:id');\n\t// // // subscribe to the Observable and provide the code we would like to do with our data from the response\n\t// // tempObservable.subscribe(data => \n\n\t// // \tconsole.log(\"Got our one task!\", data)\n\n\t// // \t);\n\n\t// \treturn this._http.get('/tasks/'+id);\n\t// }\n\n\t// deleteTask(){\n\t// // our http response is an Observable, store it in a variable\n\t// let tempObservable = this._http.delete('/destroy/:id');\n\t// // subscribe to the Observable and provide the code we would like to do with our data from the response\n\t// tempObservable.subscribe(data => console.log(\"Delete this task!\", data));\n\t// }\n\n\n\tgetCake(id){\n\n\t\tconsole.log(\"http.service.ts\");\n\t\tconsole.log(id);\n\n\t\treturn this._http.get(\"/getCake/\"+id);\n\t}\n\n\n\n\taddCake(cake){\n\n\t\tconsole.log(\"http.service.ts:\")\n\t\tconsole.log(cake);\n    // use the .post() method of HttpClient\n    // num must be an object\n    // provide the url of your post route - make sure this is set up in your server!\n    return this._http.post('/new', cake);  \n}\n\n\tupdateCake(id,updatedCake){\n\n\t\tconsole.log(\"http.service.ts:\")\n\t\tconsole.log(updatedCake);\n    // use the .post() method of HttpClient\n    // num must be an object\n    // provide the url of your post route - make sure this is set up in your server!\n    return this._http.put('/update/'+id, updatedCake);  \n}\n\n\taddReview(id,review){\n\t\tconsole.log(\"http.service.ts: id:\" +id)\n\t\tconsole.log(review);\n\n\t\treturn this._http.put('/newReview/'+id, review);\n\t}\n\n\n\tremoveObj(id){\n\t\tconsole.log(\"http.service.ts:\")\n\t\tconsole.log(id);\n\t\treturn this._http.delete('/removeObj/'+id);\n\t}\n\n\tremoveReview(id,obj){\n\t\tconsole.log(\"http.service.ts:\")\n\t\tconsole.log(id);\n\t\tconsole.log(obj);\n\t\treturn this._http.post('/removeReview/'+id,obj);\n\t}\n\n\n}\n\n\n\n\n","module.exports = \"\\r\\n\\timg{\\r\\n\\t\\theight:300px;\\r\\n\\t\\twidth: 300px;\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t}\\r\\n\\r\\ntable{\\r\\n\\toutline:2px solid black;\\r\\n\\twidth: 800px;\\r\\n\\tpadding: 3%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGlzdC9saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtDQUNDO0VBQ0MsWUFBWTtFQUNaLFlBQVk7RUFDWixxQkFBcUI7Q0FDdEI7O0FBRUQ7Q0FDQyx1QkFBdUI7Q0FDdkIsWUFBWTtDQUNaLFdBQVc7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2xpc3QvbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblx0aW1ne1xyXG5cdFx0aGVpZ2h0OjMwMHB4O1xyXG5cdFx0d2lkdGg6IDMwMHB4O1xyXG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdH1cclxuXHJcbnRhYmxle1xyXG5cdG91dGxpbmU6MnB4IHNvbGlkIGJsYWNrO1xyXG5cdHdpZHRoOiA4MDBweDtcclxuXHRwYWRkaW5nOiAzJTtcclxufSJdfQ== */\"","module.exports = \"\\n\\n\\t<!-- \\t\\t<p class = \\\"error\\\" *ngIf = \\\"newReview.rating.length < 1\\\">Your rating cannot be blank!</p>\\n   <p class = \\\"error\\\" *ngIf = \\\"newReview.comment.length < 1\\\">Your comment cannot be blank!</p> -->\\n\\n<!--    {{cakes | json}}\\n-->\\n\\n<div>\\n\\n<h1>Movie List</h1>\\n\\n<button (click)=\\\"showCreate()\\\">Add a new movie</button>\\n<router-outlet></router-outlet> \\n\\n</div>\\n\\n<table *ngIf = \\\"cakes.length != 0\\\">\\n\\n  <thead>\\n    <tr>\\n      <th>Movie Title</th>\\n      <!--         <th>Picture</th> -->\\n      <th>Average Rating</th>\\n      <th>Available Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n\\n    <tr *ngFor = \\\"let i of cakes | orderBy: 'baker'\\\">\\n      <td>{{i.title}}</td>\\n      <!--         <td><img [routerLink]=\\\"['/view',i._id]\\\" type = \\\"image\\\" src = \\\"{{i.imgurl}}\\\" ></td> -->\\n      <td>{{i.average}}</td>\\n      <td>\\n       <button [routerLink]=\\\"['/movies',i._id]\\\">Read Reviews</button>\\n       <button [routerLink]=\\\"['/reviews','new',i._id]\\\">Write Review</button>\\n<!--        <button (click)=\\\"onButtonClickShowForm(i._id)\\\">Edit</button> -->\\n       <button (click)=\\\"removeObj(i._id)\\\">Delete</button>\\n     </td>\\n   </tr>\\n </tbody>\\n</table>\\n\\n<div class = \\\"right\\\">\\n\\n  <app-create *ngIf=\\\"showForm == true\\\" [formToShow]=\\\"\\\" (updateEmitter) = \\\"functionAfterChildDataReceived($event)\\\"></app-create>\\n\\n  <app-edit *ngIf = \\\"parentVariable != null\\\" [childComponentVariable]=\\\"parentVariable\\\" (dataGoingToParent) = \\\"hideEditForm($event)\\\"></app-edit>\\n\\n</div>\\n\\n<!-- (click) = \\\"childReview(i)\\\" -->\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n  cakes : any;\n  newReview : any;\n  showForm = false;\n  // showEditForm = false;\n  parentVariable: any;\n  average : any;\n\n  constructor(private _httpService: HttpService,private _router: Router,private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this.cakes = [];\n    this.showAll();\n  }\n\n  showCreate(){\n    this.showForm = true;\n  }\n\n  showAll() {\n    let observable = this._httpService.getAll();\n    observable.subscribe(data => {\n      this.cakes = data['cakes'];\n      // console.log(this.cakes[0]);\n      // console.log(this.cakes[1]);\n      // console.log(\"Cake List Total:\"+this.cakes.length);\n      // console.log(this.cakes[0].reviews[0].rating);\n\n      // console.log(this.cakes[0].reviews[1].rating);\n\n      // console.log(\"Rating list Total for first Cake:\"+this.cakes[0].reviews.length)\n      // console.log(\"Rating list Total for second Cake:\"+this.cakes[1].reviews.length)\n\n      var sum = 0;\n      console.log(\"Calculate Average Here:\");\n\n      for(var i = 0; i<this.cakes.length;i++){\n        console.log(\"Inside first for loop\");\n        var sum = 0;\n\n        for(var j = 0; j<this.cakes[i].reviews.length;j++){\n\n          console.log(\"Inside 2nd for loop\");\n          sum = sum + parseInt(this.cakes[i].reviews[j].rating);\n          console.log(sum);\n        }\n        //  console.log(\"Calculating average and pushing\");\n        // this.average = {average:(sum/this.cakes[i].reviews.length)};\n        this.average = sum/this.cakes[i].reviews.length;\n        this.cakes[i]['average'] = this.average;\n        // .push(this.average);\n        // console.log(this.average);\n        // console.log(\"Finished: \"+ this.cakes);\n      }\n      // console.log(\"Finished: \"+ this.cakes[0]);\n    })\n\n  }      \n\n  functionAfterChildDataReceived(event){\n    console.log(event);\n    if(event == true){\n      this.showForm = false;\n      this.showAll();\n\n    }\n  }\n\n  hideEditForm(event){\n    console.log(\"Outside of HideEditForm\");\n    console.log(event);\n    if(event == true){\n      console.log(\"Within If of HideEditForm\");\n      console.log(this.parentVariable);\n      this.parentVariable = null;\n      this.showAll();\n\n    }\n  }\n\n  onButtonClickShowForm(id) {\n    console.log(\"On Button Click Show Form Component\");\n    console.log(id);\n    let observable = this._httpService.getCake(id);\n    observable.subscribe(data => {\n      this.parentVariable = data['cake'][0];\n      console.log(\"Return values from database.\")\n      console.log(data['cake'][0]);\n      console.log(this.parentVariable);\n    })\n  }\n\n  removeObj(id) {\n    let observable = this._httpService.removeObj(id);\n    observable.subscribe(data => {\n      this.showAll();\n    })\n\n\n  }\n}","module.exports = \"\\r\\n\\timg{\\r\\n\\t\\theight:300px;\\r\\n\\t\\twidth: 300px;\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t}\\r\\n\\r\\n.error{\\r\\n\\tcolor:red;\\r\\n}\\r\\n\\r\\ndiv{\\r\\n\\twidth: 500px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmV2aWV3L3Jldmlldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Q0FDQztFQUNDLFlBQVk7RUFDWixZQUFZO0VBQ1oscUJBQXFCO0NBQ3RCOztBQUVEO0NBQ0MsU0FBUztBQUNWOztBQUVBO0NBQ0MsWUFBWTtBQUNiIiwiZmlsZSI6InNyYy9hcHAvcmV2aWV3L3Jldmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblx0aW1ne1xyXG5cdFx0aGVpZ2h0OjMwMHB4O1xyXG5cdFx0d2lkdGg6IDMwMHB4O1xyXG5cdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdH1cclxuXHJcbi5lcnJvcntcclxuXHRjb2xvcjpyZWQ7XHJcbn1cclxuXHJcbmRpdntcclxuXHR3aWR0aDogNTAwcHg7XHJcbn0iXX0= */\"","module.exports = \"\\n<!-- <img src = \\\"{{cake.imgurl}}\\\">\\n-->\\n\\n<div>\\n\\t<p class = \\\"error\\\" *ngIf = \\\"review.comment.length >= 1 && review.comment.length <3\\\">Your review cannot be less than 3 characters long!</p>\\n\\n\\t<p class = \\\"error\\\" *ngIf = \\\"review.rating < 1\\\">Your rating cannot be blank!</p>\\n\\t<p class = \\\"error\\\" *ngIf = \\\"review.reviewer < 1\\\">You must provide your name</p>\\n\\t<p class = \\\"error\\\" *ngIf = \\\"review.comment < 1\\\">You must provide a review</p>\\n\\n\\t<h1>Add a review for {{cake.title}}</h1>\\n\\t<form (submit) = \\\"addReview(cake._id)\\\">\\n\\n\\t\\t<ul><b>Your Name: </b><input type =\\\"text\\\" name =\\\"review.reviewer\\\" [(ngModel)] = \\\"review.reviewer\\\"></ul>\\n\\t\\t<ul><b>Stars: </b>\\n\\t\\t\\t<select input type = \\\"text\\\"  name=\\\"review.rating\\\" [(ngModel)] = \\\"review.rating\\\"  >\\n\\n\\t\\t\\t\\t<option value = \\\"1\\\">1</option>\\n\\t\\t\\t\\t<option value = \\\"2\\\">2</option>\\n\\t\\t\\t\\t<option value = \\\"3\\\">3</option>\\n\\t\\t\\t\\t<option value = \\\"4\\\">4</option>\\n\\t\\t\\t\\t<option value = \\\"5\\\">5</option>\\n\\n\\t\\t\\t</select></ul>\\n\\n\\t\\t\\t<ul><b>Your Review: </b> \\n\\t\\t\\t\\t<textarea name=\\\"review.comment\\\" [(ngModel)] = \\\"review.comment\\\"> </textarea>\\n\\t\\t\\t</ul>\\n\\n\\t\\t\\t<br>\\n\\n\\t\\t\\t<input [disabled] = \\\"review.comment.length < 3\\\"  type = \\\"submit\\\" value = \\\"Submit Review\\\">\\n\\n\\t\\t</form>\\n\\n\\t</div>\\n\\n\\t<button (click) = \\\"cancel()\\\">Cancel</button>\\n\\n<!-- \\n\\t{{review | json}} -->\\n\\n\\n\\n<!-- <p class = \\\"error\\\" *ngIf = \\\"review.rating.length = 0\\\">Your rating cannot be blank!</p>\\n-->\\n\\n<!-- <p class = \\\"error\\\" *ngIf = \\\"review.comment.length > 1 && review.comment.length < 3\\\">Your comment cannot be less than 3 characters long!</p> -->\\n\\n\\n<!--  -->\\n\\n\\n<!-- \\t{{review | json}} -->\\n\\n<!-- \\n\\t<form (submit)=\\\"addCake()\\\">\\n\\n\\t    <b>Baker: </b><input type=\\\"text\\\" name=\\\"newCake.baker\\\" [(ngModel)] = \\\"newCake.baker\\\" />\\n\\t    <b>ImgUrl: </b><input type=\\\"text\\\" name=\\\"newCake.imgurl\\\" [(ngModel)] = \\\"newCake.imgurl\\\" />\\n\\t    <input [disabled]=\\\"newCake.baker.length < 1 || newCake.imgurl.length < 1\\\" type=\\\"submit\\\" value=\\\"Upload Cake\\\"/>\\n\\t</form> -->\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { HttpService } from 'src/app/http.service';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n// import { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\n\nexport class ReviewComponent implements OnInit {\n  cake : any;\n  review : any;\n\n\n  constructor(private _httpService: HttpService,private _router: Router,private _route: ActivatedRoute) { }\n\n  ngOnInit() {\n\n    this._route.params.subscribe((params: Params) => {\n      console.log(params['id'])\n      this.getCake(params['id']);\n    });\n\n    this.cake  = {\n      name: \"\",\n      title: \"\",\n      reviews: \"\"\n    }\n\n    this.review = {\n      reviewer:\"\",\n      rating: 1,\n      comment: \"\"\n    }\n\n\n\n  }\n  //on task component html, make a form to submit and on the submit run the below function with an observable to update data to the db and run this emit after (inside the subscribe)\n  //this data will be transferred to the parent who is listening for this event on the parent html.\n  //once the data transfers to the parent from the emit, the parent will run a function defined on the same line.\n\n  getCake(id){\n\n    let observable = this._httpService.getCake(id);\n    observable.subscribe(data => {\n      this.cake = data['cake'][0];\n    })\n\n  }\n\n\n\n  addReview(id){\n\n    console.log(\"Component: \"+id);\n    console.log(this.review)\n\n    let observable = this._httpService.addReview(id,this.review);\n    observable.subscribe(data => {\n\n      console.log(\"Data received from observable in component.\")\n\n    })\n\n    // this.review = {\n    //   rating: \"\",\n    //   comment: \"\"\n    // }\n    this._router.navigate(['/']);\n\n\n\n  }\n\n\n\n\n\n\n\n\n\n  cancel(){\n    this._router.navigate(['/']);\n  }\n\n}\n\n","module.exports = \"\\r\\n\\timg{\\r\\n\\t\\theight:300px;\\r\\n\\t\\twidth: 300px;\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t}\\r\\n\\r\\n\\t.bold{\\r\\n\\t\\tfont-weight: bold;\\r\\n\\t}\\r\\n\\r\\n\\ttable{\\r\\n\\t\\twidth: 500px;\\r\\n\\t}\\r\\n\\r\\n\\tth{\\r\\n\\r\\n\\t\\toutline: 1px solid black;\\r\\n\\t}\\r\\n\\r\\n\\ttd{\\r\\n\\t\\ttext-align: center;\\r\\n\\t}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdmlldy92aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtDQUNDO0VBQ0MsWUFBWTtFQUNaLFlBQVk7RUFDWixxQkFBcUI7Q0FDdEI7O0NBRUE7RUFDQyxpQkFBaUI7Q0FDbEI7O0NBRUE7RUFDQyxZQUFZO0NBQ2I7O0NBRUE7O0VBRUMsd0JBQXdCO0NBQ3pCOztDQUVBO0VBQ0Msa0JBQWtCO0NBQ25CIiwiZmlsZSI6InNyYy9hcHAvdmlldy92aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHRpbWd7XHJcblx0XHRoZWlnaHQ6MzAwcHg7XHJcblx0XHR3aWR0aDogMzAwcHg7XHJcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcblx0fVxyXG5cclxuXHQuYm9sZHtcclxuXHRcdGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cdH1cclxuXHJcblx0dGFibGV7XHJcblx0XHR3aWR0aDogNTAwcHg7XHJcblx0fVxyXG5cclxuXHR0aHtcclxuXHJcblx0XHRvdXRsaW5lOiAxcHggc29saWQgYmxhY2s7XHJcblx0fVxyXG5cclxuXHR0ZHtcclxuXHRcdHRleHQtYWxpZ246IGNlbnRlcjtcclxuXHR9Il19 */\"","module.exports = \"\\n\\n\\n<!-- <img src =\\\"{{cake.imgurl}}\\\"> -->\\n\\n<button (click) =\\\"removeObj(cake._id)\\\">Delete Movie</button>\\n<!-- \\n<form (submit) = \\\"addReview(cake._id)\\\">\\n\\n\\t<ul><b>Rating: </b>\\n\\t\\t<select input type = \\\"text\\\"  name=\\\"review.rating\\\" [(ngModel)] = \\\"review.rating\\\"  >\\n\\t\\t\\t<option value = \\\"1\\\">1</option>\\n\\t\\t\\t<option value = \\\"2\\\">2</option>\\n\\t\\t\\t<option value = \\\"3\\\">3</option>\\n\\t\\t\\t<option value = \\\"4\\\">4</option>\\n\\t\\t\\t<option value = \\\"5\\\">5</option>\\n\\t\\t</select></ul>\\n\\n\\t\\t<b>Review: </b> \\n\\t\\t<br>\\n\\t\\t<textarea name=\\\"review.comment\\\" [(ngModel)] = \\\"review.comment\\\"> </textarea>\\n\\t\\t<br>\\n\\t\\t<input type = \\\"submit\\\" value = \\\"Submit Review\\\">\\n\\t</form> -->\\n\\n<!-- \\t<ul><span class ='bold'>Baker: </span>{{cake.baker}}</ul>\\n\\n\\t<p *ngIf = \\\"NaN\\\"></p> \\n\\t<ul><span class ='bold'>Average Rating: </span> \\n\\t\\t<ul *ngIf = \\\"average\\\">{{average}}</ul>\\n\\t</ul> -->\\n\\n\\t<h1>Reviews for {{cake.title}}</h1>\\n\\n\\t<table>\\n\\t\\t<thead>\\n\\t\\t\\t<tr>\\n\\t\\t\\t\\t<th>Reviewer</th>\\n\\t\\t\\t\\t<th>Stars</th>\\n\\t\\t\\t\\t<th>Reviews</th>\\n\\t\\t\\t\\t<th>Action</th>\\n\\t\\t\\t</tr>\\n\\t\\t</thead>\\n\\n\\t\\t<tbody>\\n\\t\\t\\t<tr *ngFor = \\\"let i of cake.reviews | orderBy: '-rating'\\\">\\n\\t\\t\\t\\t<td>{{i.reviewer}}</td>\\n\\t\\t\\t\\t<td>{{i.rating}}</td>\\t\\t\\t\\t\\n\\t\\t\\t\\t<td>{{i.comment}}</td>\\n\\t\\t\\t\\t<td><button (click) = \\\"deleteReview(i._id)\\\">Delete</button></td>\\t\\n\\t\\t\\t</tr>\\n\\t\\t</tbody>\\n\\t</table>\\n\\n\"","import { HttpService } from 'src/app/http.service';\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\n\n\n@Component({\n\tselector: 'app-view',\n\ttemplateUrl: './view.component.html',\n\tstyleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n\tcake: any;\n\treview : any;\n\taverage: any;\n\n\n\n\t\n\tconstructor(private _httpService: HttpService,private _router: Router,private _route: ActivatedRoute) { \n\t}\n\n\tngOnInit() {\n\n\t\tthis.cake = {\n\t\t\tbaker:\"\",\n\t\t\timgurl:\"\",\n\t\t\treviews:\"\"\n\t\t}\n\n\t\tthis._route.params.subscribe((params: Params) => {\n\t\t\tconsole.log(params['id']);\n\t\t\tthis.getCake(params['id']);\n\t\t});\n\n\n\t\tthis.review = {\n\t\t\trating: \"\",\n\t\t\tcomment: \"\"\n\t\t}\n\n\t\tthis.average \n\n\t\t// console.log(this._route.snapshot.params.id);\n\n\t\t// this.getAverage();\n\t}\n\n\tgetCake(id){\n\n\t\tconsole.log(id);\n\t\tlet observable = this._httpService.getCake(id);\n\t\tobservable.subscribe(data => {\n\n\t\t\tthis.cake = data['cake'][0];\n\t\t\tconsole.log(this.cake);\n\t\t\tconsole.log(\"Calculate Average Here.\");\n\n\t\t\tvar sum = 0;\n\t\t\t// console.log(this.cake.reviews.length);\n\n\t\t\t// console.log(this.cake.reviews[0].rating);\n\n\t\t\tfor(var i = 0; i < this.cake.reviews.length;i++){\n\t\t\t\tsum = sum + parseInt(this.cake.reviews[i].rating);\n\t\t\t}\n\t\t\tconsole.log(sum);\n\t\t\tthis.average = (sum/this.cake.reviews.length).toFixed(2);\n\t\t\tconsole.log(this.average);\n\n\n\n\t\t})\n\t}\n\n\tdeleteReview(reviewId): void {\n\n\t\tconsole.log(\"Child component: \");\n\n\t\tfor(var i = 0; i < this.cake.reviews.length; i++){\n\n\n\t\t\tconsole.log(\"In the for loop\");\n\n\t\t\tif(this.cake.reviews[i]._id == reviewId){\n\n\t\t\t\tvar temp = this.cake.reviews[i];\n\t\t\t\tthis.cake.reviews[i] = this.cake.reviews[this.cake.reviews.length-1];\n\t\t\t\tthis.cake.reviews[this.cake.reviews.length-1] = temp;\n\t\t\t\tthis.cake.reviews.pop();\n\n\t\t\t}\n\t\t}\n\n\t\tconsole.log(\"Outside of for loop: \");\n\t\tconsole.log(this.cake);\n\n\t\tlet observable = this._httpService.removeReview(this.cake._id,this.cake);\n\t\tobservable.subscribe(data => {\n\n\t\t\tconsole.log(\"Review Component Observable:\");\n\t\t\tconsole.log(data);\n\t\t})\n\n\t\tthis.getCake(this.cake._id);\n\n\t}\n\t\n\n\n\taddReview(id){\n\n\t\tconsole.log(\"Component: \"+id);\n\t\tconsole.log(this.review)\n\n\t\tlet observable = this._httpService.addReview(id,this.review);\n\t\tobservable.subscribe(data => {\n\n\t\t\tconsole.log(\"Data received from observable in component.\")\n\n\t\t})\n\n\t\tthis.review = {\n\t\t\trating: \"\",\n\t\t\tcomment: \"\"\n\t\t}\n\n\t\tthis.getCake(id);\n\n\n\t}\n\n  removeObj(id) {\n    let observable = this._httpService.removeObj(id);\n    observable.subscribe(data => {\n\n    \t    this._router.navigate(['/']);\n\n    })\n\n\n  }\n\n\n\t// getAverage(){\n\n\t\t// \tthis.getCake(this._route.snapshot.params.id);\n\t\t// \tconsole.log(this.cake);\n\n\n\t\t// }\n\n\n\n\n\t\t// deleteReview(reviewId){\n\n\t\t\t// \tfor(var i = 0; i< this.cake.reviews.length; i++){\n\n\n\t\t\t\t// \t\tif(this.cake.reviews[i]._id == reviewId){\n\t\t\t\t\t// \t\t\tvar temp = this.cake.reviews[i];\n\t\t\t\t\t// \t\t\tthis.cake.reviews[i] = this.cake.reviews[this.cake.reviews.length-1];\n\t\t\t\t\t// \t\t\tthis.cake.reviews[this.cake.reviews.length-1] = temp;\n\t\t\t\t\t// \t\t\tthis.cake.reviews.pop();\n\t\t\t\t\t// \t\t}\n\n\t\t\t\t\t// \t}\n\t\t\t\t\t// \tlet observable = this._httpService.removeReview(this.cake._id,this.cake);\n\t\t\t\t\t// \tobservable.subscribe(data => {\n\t\t\t\t\t\t// \t\tconsole.log(\"Review Component Observable: \");\n\t\t\t\t\t\t// \t\tthis.cake = data['cake'];\n\t\t\t\t\t\t// \t\tconsole.log(this.cake);\n\t\t\t\t\t\t// \t})\n\n\t\t\t\t\t\t// }\n\n\n\n\n\n\n\t\t\t\t\t}\n\n\n\n\n\n\n\n\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}